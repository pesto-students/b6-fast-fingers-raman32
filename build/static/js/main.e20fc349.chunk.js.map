{"version":3,"sources":["assets/icons/play-icon.svg","assets/icons/keyboard-icon.svg","assets/icons/cross-icon.svg","assets/icons/reload-icon.svg","components/TextBox/index.js","components/DropDownList/index.js","components/StartGame/index.js","pages/Entry/index.js","components/NameCard/index.js","components/LevelIndicator/index.js","components/ProgressCircle/index.js","utils/time.js","components/Timer/index.js","components/WordDisplay/index.js","components/ScoreCounter/index.js","components/StopGame/index.js","components/ScoreBoard/index.js","components/EndScoreCard/index.js","components/Restart/index.js","utils/getWord.js","components/Quit/index.js","pages/Game/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TextBox","text","setText","placeholder","autoFocus","className","type","value","onChange","event","target","DropDownList","items","setItem","useState","selected","setSelected","options","map","item","onClick","label","StartGame","setPage","src","playIcon","alt","Entry","props","playerName","setPlayerName","setDifficulty","keyboardIcon","NameCard","name","LevelIndicator","level","ProgressCircle","size","progress","rotateStyle","setRotateStyle","useEffect","transform","sizeStyle","height","width","clipStyle","clip","style","opacity","children","convertToSecondsAndCenti","centiSeconds","Math","floor","Timer","totalTime","onFinish","time","setTime","total","setTotal","setProgress","timer","setTimeout","clearTimeout","WordDisplay","word","typedText","wordsInsideDiv","split","letter","index","ScoreCounter","score","StopGame","onStop","crossIcon","ScoreBoard","scores","maxScore","max","scoreList","element","EndScoreCard","length","Restart","setRestart","reloadIcon","getRandomizedWord","filteredArray","wordList","filter","ele","random","Quit","onQuit","difficulty","currentWord","setCurrentWord","setTotalTime","setTypedText","isFinished","setIsFinished","restart","setScore","setScores","getRandomizedWordEasy","getRandomizedWordMedium","getRandomizedWordHard","ceil","prev","App","page","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e20fc349.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play-icon.c6ad2822.svg\";","module.exports = __webpack_public_path__ + \"static/media/keyboard-icon.9c1f9820.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross-icon.465bb167.svg\";","module.exports = __webpack_public_path__ + \"static/media/reload-icon.7c71c1ab.svg\";","import React from 'react'\nimport './index.css'\nfunction TextBox({text,setText,placeholder= ''}){\nreturn (\n    <div>\n        <input autoFocus className=\"textBox\" type=\"text\" placeholder={placeholder} value={text} onChange={(event)=>setText(event.target.value)} />\n    </div>\n);\n}                           \nexport default TextBox","import React, { useState } from 'react'\nimport './index.css'\nfunction DropDownList({ items, setItem, placeholder }) {\n    const [selected,setSelected] = useState('');\n    const options = items.map((item) =>\n        <div className=\"options\" onClick={() =>  {setSelected(item.label); setItem(item.value);}}>\n            {item.label}\n        </div>);\n    return (\n        <div className=\"dropdown\">\n            <div className=\"placeholder\">{!selected ? placeholder : selected}</div>\n            <div className=\"dropdown-content\" >\n                {options}\n            </div>\n        </div>\n    );\n}\nexport default DropDownList","import React from 'react'\nimport './index.css'\nimport playIcon from '../../assets/icons/play-icon.svg'\nfunction StartGame({setPage}){\nreturn (\n    <div className=\"StartGame\" onClick={() => setPage(1)}>\n    <img className =\"playIcon\" src={playIcon} alt=\"Click To play\" />\n    <div>Start Game</div>\n    </div>\n);\n}                           \nexport default StartGame","import React from 'react'\nimport './index.css'\nimport TextBox from '../../components/TextBox'\nimport DropDownList from '../../components/DropDownList'\nimport StartGame from '../../components/StartGame'\nimport keyboardIcon from '../../assets/icons/keyboard-icon.svg'\nfunction Entry(props){\nconst {playerName, setPlayerName, setDifficulty, setPage } =  props;\nconst items =  [{label:\"Easy\", value:1},\n{label:\"Medium\", value:2},\n{label:\"Hard\", value:3}]\n                \nreturn (\n    <div className=\"Entry\">\n       <img className=\"keyboardLogo\" src={keyboardIcon} alt=\"logo\" />   \n       <div className=\"logoTitle\"> fast finger</div>\n       <div className=\"logoDescription\">____________the ultimate typing game___________</div>\n        <TextBox text={playerName} setText={setPlayerName} placeholder=\"Type your name\"/>\n        <DropDownList items={items} setItem={setDifficulty} placeholder=\"Difficulty Level\"/>\n        <StartGame setPage={setPage} />\n    </div>\n);\n}                           \nexport default Entry","import React from 'react'\nimport './index.css'\nfunction NameCard({name}){\nreturn (\n    <div>\n       <div> PLAYER_NAME:</div>\n       <div>{name}</div> \n        \n    </div>\n);\n}                           \nexport default NameCard","import React from 'react'\nimport './index.css'\nfunction LevelIndicator({level}){\nreturn (\n    <div>\n        <div>\n        LEVEL\n        </div>\n        <div>\n            {level >= 3 ? 'Hard' : level >= 2 ? 'Medium' : 'Easy'}\n        </div>\n    </div>\n);\n}                           \nexport default LevelIndicator","import React, { useState, useEffect } from 'react'\nimport './index.css'\nfunction ProgressCircle(props) {\n    const {\n        size = 120,\n        progress = 0\n    } = props;\n    const [rotateStyle, setRotateStyle] = useState({});\n    useEffect(() => {\n        setRotateStyle({\n            transform: `rotate(${(progress) * 360 / 100}deg)`,\n        });\n    }, [progress])\n    const sizeStyle = { height: size, width: size};\n    const clipStyle = { clip: `rect(0 ${size / 2}px ${size}px 0)`};\n    return (\n        <div className=\"container\" style={sizeStyle}>\n            <div className=\"background\" style={sizeStyle} />\n            <div className=\"rotate\" style={{...sizeStyle,...clipStyle,...rotateStyle}} />\n            <div className=\"left\" style={{ ...sizeStyle,...clipStyle,opacity: progress >=50 ? 0  : 1 }} />\n            <div className=\"right\" style={{...sizeStyle, ...clipStyle,opacity: progress>=50 ? 1 : 0 }} />\n            <div className=\"textContainer\" style={sizeStyle}>\n                <div>{props.children}</div> \n            </div>\n        </div>\n    );\n}\nexport default ProgressCircle","export function convertToSecondsAndCenti(centiSeconds){\nreturn `${Math.floor(centiSeconds/100)} : ${centiSeconds%100}`;\n}","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport ProgressCircle from '../ProgressCircle'\nimport { convertToSecondsAndCenti } from '../../utils/time';\n\nfunction Timer({totalTime, onFinish}) {\n    const [time, setTime] =useState(0);\n    const [total,setTotal] = useState(2);\n    const [progress, setProgress] = useState(0);\n    useEffect(()=>{\n        setTotal(totalTime);\n        setTime(0);\n    },[totalTime])\n    useEffect(() => {\n        const timer = setTimeout(()=>setTime(time+10),100);\n        setProgress(time  * 100/ total);\n        if(time>total){\n            onFinish();\n            clearTimeout(timer);\n            setTime(0);\n        }\n        return ()=>{clearTimeout(timer)}\n    }, [onFinish, time, total])\n    return (\n        <ProgressCircle progress={progress}>\n            {convertToSecondsAndCenti(time)}\n        </ProgressCircle>\n    );\n}\nexport default Timer","import React from 'react'\nimport './index.css'\nfunction WordDisplay({word,typedText}){\nconst wordsInsideDiv = word.split('').map((letter,index)=><div className= {typedText && typedText[index] ? letter===typedText[index] ? \"correct\" : \"incorrect\" :\"\"}> {letter}</div>)\nreturn (\n    <div className=\"wordDisplay\">\n        {wordsInsideDiv}\n    </div>\n);\n}                           \nexport default WordDisplay","import React from 'react'\nimport { convertToSecondsAndCenti } from '../../utils/time';\nimport './index.css'\nfunction ScoreCounter({score}){\nreturn (\n    <div>\n        SCORE : {convertToSecondsAndCenti(score)}\n    </div>\n);\n}                           \nexport default ScoreCounter","import React from 'react'\nimport './index.css'\nimport crossIcon from '../../assets/icons/cross-icon.svg'\nfunction StopGame({ onStop }) {\n    return (\n        <div className=\"StopGame\" onClick={onStop}>\n            <img src={crossIcon} className=\"crossIcon\" alt=\"Stop Game\" />\n            <div>\n                Stop Game\n        </div>\n        </div>\n    );\n}\nexport default StopGame","import React from 'react'\nimport { convertToSecondsAndCenti } from '../../utils/time';\nimport './index.css'\nfunction ScoreBoard({scores}){\nconst maxScore = Math.max(...scores);\nconst scoreList = scores.map((element,index) => <div>\n    Game {index} : {convertToSecondsAndCenti(element)}\n    {element===maxScore ? \"High\" : \"\"}\n    </div>);\nreturn (\n    <div className=\"ScoreBoard\">\n        <div>\n        SCORE BOARD\n        </div>\n        <div>\n        {scoreList}\n        </div>\n    </div>\n);\n}                           \nexport default ScoreBoard","import React from 'react'\nimport './index.css'\nfunction EndScoreCard({scores}){\n\nreturn(<div className=\"EndScoreCard\">\n<div>\n    Your Score: {scores[scores.length -1]}\n</div>\n{\n    scores[scores.length-1] === Math.max(...scores)\n    &&\n    <div>\nHIGH SCORE\n</div>}\n</div>);\n}\nexport default EndScoreCard","import React from 'react'\nimport './index.css'\nimport reloadIcon from '../../assets/icons/reload-icon.svg'\nfunction Restart({setRestart}){\nreturn <>\n    <div className=\"Restart\" onClick={()=>{\n        setRestart(true);\n    }}>\n    <img src={reloadIcon} className=\"reloadIcon\" alt=\"Restart game\" />\n    <div>Restart</div>\n    </div>\n</>\n}\nexport default Restart","import wordList from '../data/dictionary.json'\nfunction getRandomizedWord(level){\nif(level<2){\n    const filteredArray =  wordList.filter((ele)=>ele.length <= 4)\n    return ()=>filteredArray[Math.floor(Math.random() * filteredArray.length)]\n}\nelse if( level < 3){\n    const filteredArray =  wordList.filter((ele)=>ele.length > 4 && ele.length < 8)\n    return ()=>filteredArray[Math.floor(Math.random() * filteredArray.length)]\n}\nelse {\n    const filteredArray =  wordList.filter((ele)=>ele.length > 8)\n    return ()=>filteredArray[Math.floor(Math.random() * filteredArray.length)]\n}\n}\nexport default getRandomizedWord;","import React from 'react'\nimport './index.css'\nfunction Quit({onQuit}){\nreturn <>\n    <div className=\"Quit\" onClick={onQuit}>\n    Quit\n    </div>\n</>\n}\nexport default Quit","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport NameCard from '../../components/NameCard'\nimport LevelIndicator from '../../components/LevelIndicator'\nimport Timer from '../../components/Timer'\nimport WordDisplay from '../../components/WordDisplay'\nimport ScoreCounter from '../../components/ScoreCounter'\nimport TextBox from '../../components/TextBox'\nimport StopGame from '../../components/StopGame'\nimport ScoreBoard from '../../components/ScoreBoard'\nimport EndScoreCard from '../../components/EndScoreCard'\nimport Restart from '../../components/Restart';\nimport getRandomizedWord from '../../utils/getWord'\nimport Quit from '../../components/Quit'\nfunction Entry(props) {\n    const { playerName, difficulty, setDifficulty, setPage } = props;\n    const [currentWord, setCurrentWord] = useState('start');\n    const [totalTime, setTotalTime] = useState(400);\n    const [typedText, setTypedText] = useState('');\n    const [isFinished, setIsFinished] = useState(false);\n    const [restart, setRestart] = useState(false);\n    const [score, setScore] = useState(0);\n    const [scores, setScores] = useState([]);\n    const getRandomizedWordEasy = getRandomizedWord(1);\n    const getRandomizedWordMedium = getRandomizedWord(2);\n    const getRandomizedWordHard = getRandomizedWord(3);\n    useEffect(() => {\n        if (currentWord === typedText) {\n            if (difficulty > 3)\n                setCurrentWord(getRandomizedWordHard());\n            else if (difficulty > 2)\n                setCurrentWord(getRandomizedWordMedium());\n            else\n                setCurrentWord(getRandomizedWordEasy());\n            setDifficulty(difficulty + 0.01);\n            setTypedText('');\n            setScore(score + totalTime);\n            setTotalTime(Math.ceil(currentWord.length / difficulty) > 2 ? Math.ceil(currentWord.length / difficulty) * 100 : 200);\n\n        }\n    }, [currentWord, difficulty, getRandomizedWordEasy, getRandomizedWordHard, getRandomizedWordMedium, score, setDifficulty, totalTime, typedText])\n    useEffect(() => {\n        if (isFinished) {\n            setScores((prev) => [...prev, score])\n        }\n    }, [isFinished, score])\n    useEffect(() => {\n        if (restart) {\n            setScore(0);\n            setDifficulty(1);\n            setCurrentWord(getRandomizedWordEasy());\n            setTypedText('');\n            setIsFinished(false);\n            setRestart(false);\n        }\n    }, [restart])\n    return (\n        <div className=\"Game\">\n            <div className=\"header\">\n                <div className=\"headerLeft\">\n                    <NameCard name={playerName} />\n                    <LevelIndicator level={difficulty} />\n                </div>\n                <div className=\"headerRight\">\n                    <div className=\"headerLogo\">\n                        fast fingers\n    </div>\n                    <ScoreCounter score={score} />\n                </div>\n            </div>\n            {!isFinished ?\n                <div className=\"scoreAndGameContainer\">\n                    <div className=\"scoreBoard\" >\n                        <ScoreBoard scores={scores} />\n                        <StopGame onStop={() => setIsFinished(true)} />\n                    </div>\n                    <div className=\"gameInner\">\n                        <div className=\"timer\">\n                            <Timer totalTime={totalTime} onFinish={() => setIsFinished(true)} />\n\n                        </div>\n                        <WordDisplay word={currentWord} typedText={typedText} />\n                        <TextBox text={typedText} setText={setTypedText} />\n                    </div>\n                    <div className=\"collapsableDiv\">\n                    </div>\n                </div>\n                :\n                <>\n                    <EndScoreCard scores={scores} />\n                    <Restart setRestart={setRestart} />\n                    <div className=\"quit\">\n                    <Quit onQuit={()=>setPage(0)} />\n                    </div>\n                </>\n            }\n\n\n        </div>\n    );\n}\nexport default Entry","import React,{useState} from 'react';\nimport './App.css';\nimport Entry from '../src/pages/Entry'\nimport Game from '../src/pages/Game'\nfunction App() {\n  const [playerName, setPlayerName] = useState('');\n  const [difficulty, setDifficulty] = useState(1);\n  const [page,setPage] = useState(0);\n  return (\n    <div className=\"App\">\n      { page ===0  && <Entry playerName={playerName} setPlayerName={setPlayerName} setDifficulty={setDifficulty} setPage={setPage} />}\n      { page ===1 && <Game playerName={playerName} difficulty={difficulty} setDifficulty={setDifficulty} setPage={setPage} /> }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}